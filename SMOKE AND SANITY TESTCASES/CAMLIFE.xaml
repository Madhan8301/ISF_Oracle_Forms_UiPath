<Activity mc:Ignorable="sap sap2010" x:Class="TestCase1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Excel_TestData1" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="Flag" Type="InOutArgument(sd:DataColumn)" />
    <x:Property Name="TestCaseID" Type="InOutArgument(sd:DataColumn)" />
    <x:Property Name="Config" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="RowCount" Type="InOutArgument(x:Int32)" />
    <x:Property Name="In_ConfigFile" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="IdentityNo" Type="InOutArgument(x:String)" />
    <x:Property Name="PolicyNumber" Type="InOutArgument(x:String)" />
    <x:Property Name="ExcelRow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="ExcelData_Main" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="Testcase_Id" Type="InOutArgument(x:String)" />
    <x:Property Name="Plno" Type="InOutArgument(x:String)" />
    <x:Property Name="Test_Start_Time" Type="InOutArgument(x:String)" />
    <x:Property Name="Test_End_Time" Type="InOutArgument(x:String)" />
    <x:Property Name="Exe_Stat" Type="InOutArgument(x:String)" />
    <x:Property Name="ClNo" Type="InOutArgument(x:String)" />
    <x:Property Name="OutStandingDate" Type="InArgument(x:String)" />
    <x:Property Name="ExceptionImage" Type="InArgument(ui:Image)" />
    <x:Property Name="GrPloyNo" Type="InOutArgument(x:String)" />
    <x:Property Name="QID" Type="InOutArgument(x:String)" />
    <x:Property Name="BillingNo1" Type="InOutArgument(x:String)" />
    <x:Property Name="BillingNo2" Type="InOutArgument(x:String)" />
    <x:Property Name="ScreenShotImage" Type="InOutArgument(ui:Image)" />
    <x:Property Name="outputFolder" Type="InOutArgument(x:Object)" />
    <x:Property Name="Config_Results" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="IdentityNo2" Type="InOutArgument(x:String)" />
    <x:Property Name="VoucherNumber" Type="InOutArgument(x:String)" />
  </x:Members>
  <this:TestCase1.ExceptionImage>
    <InArgument x:TypeArguments="ui:Image" />
  </this:TestCase1.ExceptionImage>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1067.2,7352</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TestCase1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TestCase1" sap:VirtualizedContainerService.HintSize="812,7287.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="ConfigDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="TestDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="FilteredTestDT1" />
      <Variable x:TypeArguments="sd:DataTable" Name="TestDT1" />
      <Variable x:TypeArguments="x:String" Name="Value" />
      <Variable x:TypeArguments="sd:DataRow" Name="ExcelRowMain" />
      <Variable x:TypeArguments="sd:DataRow" Name="Config" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_ExecutionRes" />
      <Variable x:TypeArguments="x:String" Name="Exe_Status" />
      <Variable x:TypeArguments="x:String" Name="StartTime" />
      <Variable x:TypeArguments="x:String" Name="EndTime" />
      <Variable x:TypeArguments="sd:DataRow" Name="TestDataRow" />
      <Variable x:TypeArguments="x:String" Name="ExceptionActivity" />
      <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
      <Variable x:TypeArguments="x:String" Name="ExceptionScreenShotPath" />
      <Variable x:TypeArguments="x:String" Name="PolicyNoRegistered" />
      <Variable x:TypeArguments="x:String" Name="ApplicationScreenShotPath" />
      <Variable x:TypeArguments="x:String" Name="IdenNo_Exp" />
      <Variable x:TypeArguments="scg:IList(x:String)" Name="RerunList" />
      <Variable x:TypeArguments="x:String" Name="ReRun" />
      <Variable x:TypeArguments="x:Int32" Name="LengthOfRerunList" />
      <Variable x:TypeArguments="x:String" Name="TestDataPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Config_Files\Config_Camlife.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="749.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_393" UnSafe="False" WorkflowFileName="Config_Files\Config_Camlife.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Out_ConfigFile">[In_ConfigFile]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CreateList x:TypeArguments="x:String" DisplayName="Create List" sap:VirtualizedContainerService.HintSize="749.6,135.2" sap2010:WorkflowViewState.IdRef="CreateList`1_2" NewList="[RerunList]" />
    <Assign sap:VirtualizedContainerService.HintSize="749.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_81">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TestDataPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[In_ConfigFile("TestData_Path").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="749.6,281.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[TestDataPath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,172" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[TestDT1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[In_ConfigFile(&quot;TDSheetName&quot;).ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:FilterDataTable DataTable="[TestDT1]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="749.6,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[FilteredTestDT1]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["TestCaseID"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["LIFE_CONV"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["ExecutionFlag"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["Yes"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ClearFolder.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="749.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="ExcelUtilities\ClearFolder.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExcelDataClear.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="749.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="ExcelUtilities\ExcelDataClear.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationLogin.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="749.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="ApplicationLogin\ApplicationLogin.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[FilteredTestDT1.RowCount= 0]" sap:VirtualizedContainerService.HintSize="749.6,5740" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="377.6,232" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;Please select execution Flag&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="716,5324.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="D:\ISF-UIPATH\Git\isf_nsurecore_lifeconventional_smoke_sanity\src\Results\Execution_Result\Execution_Result.xlsx" Name="ExecutionResultPath" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="672.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[RowCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">4</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[FilteredTestDT1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="672.8,2600.8" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="639.2,2412.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="596,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[RowCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[RowCount+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="596,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CurrentRow.item("TestDataID").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="596,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[TestDataRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[CurrentRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="596,1958.4" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="559.2,1727.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="PolicyDate" />
                          <Variable x:TypeArguments="x:String" Name="CustomerRegistered" />
                          <Variable x:TypeArguments="ui:Image" Name="ExceptionImage" />
                          <Variable x:TypeArguments="ui:Image" Name="ScreenShotImage" />
                          <Variable x:TypeArguments="x:String" Name="TCID" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Test_Start_Time]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteValues - IdentityCode.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - IdentityCode.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="TestData">[TestDataRow]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">[RowCount]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Status">[Exe_Status]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Start_Time">[Test_Start_Time]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="End_Time">[EndTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Message">[ExceptionMessage]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Activity">[ExceptionActivity]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_SS">[ExceptionScreenShotPath]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo">[IdentityNo]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Number_Write">[Plno]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[TestDataRow(&quot;TestDataID&quot;).ToString]" sap:VirtualizedContainerService.HintSize="496.8,303.2" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence x:Key="CML_0001" sap:VirtualizedContainerService.HintSize="450.4,1607.2" sap2010:WorkflowViewState.IdRef="Sequence_31">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Proposal.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_251" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Proposal.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="JavaSecurityBlock" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_UnderWriting.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_390" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_UnderWriting.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_IssueReceipts.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_253" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_IssueReceipts.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_QualityCheck.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_255" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_QualityCheck.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_PolicyIssuance.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_257" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_PolicyIssuance.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Enquiry_OutDate.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_282" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Enquiry_OutDate.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="OutStandingQuery_Camlife.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_283" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\OutStandingQuery_Camlife.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate_Enquiry">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Outstanding_PolicyNo">[Plno]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_IssueReceipts_PremiumPayment.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_284" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_IssueReceipts_PremiumPayment.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Enquiry_OutDate.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_285" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Enquiry_OutDate.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0002" sap:VirtualizedContainerService.HintSize="450.4,1606.4" sap2010:WorkflowViewState.IdRef="Sequence_38">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_266" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_267" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Proposal.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_268" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Proposal.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="JavaSecurityBlock" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_UnderWriting.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_269" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_UnderWriting.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_IssueReceipts.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_270" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_IssueReceipts.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_QualityCheck.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_271" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_QualityCheck.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_PolicyIssuance.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_272" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_PolicyIssuance.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Enquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_273" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Enquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ClaimRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_274" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\ClaimRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo">[ClNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ClaimProcessing.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_275" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\ClaimProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo">[ClNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="VoucherNumber">[VoucherNumber]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0003" sap:VirtualizedContainerService.HintSize="449.6,1147.2" sap2010:WorkflowViewState.IdRef="Sequence_43">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_121" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_276" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotatioReg.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_394" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupQuotatioReg.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCapture.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_278" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupMemberCapture.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupPolicyProcessing.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_279" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupPolicyProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_PolicyIssueForm.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_280" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_PolicyIssueForm.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gr_Enquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_281" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Gr_Enquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0004" sap:VirtualizedContainerService.HintSize="450.4,1300.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_140" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_286" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_287" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdenNo_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotatioReg.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_395" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupQuotatioReg.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCapture.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_290" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupMemberCapture.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupPolicyProcessing.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_291" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupPolicyProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_PolicyIssueForm.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_292" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_PolicyIssueForm.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupEntrant.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_288" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupEntrant.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1">[IdenNo_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0005" sap:VirtualizedContainerService.HintSize="450.4,1453.6" sap2010:WorkflowViewState.IdRef="Sequence_210">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_293" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_294" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotatioReg.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_396" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupQuotatioReg.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCapture.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_297" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupMemberCapture.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupPolicyProcessing.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_298" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupPolicyProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_PolicyIssueForm.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_299" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_PolicyIssueForm.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gr_BillingEnquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_385" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Gr_BillingEnquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo1">[BillingNo1]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo2" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_IssueReceipts.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_386" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_IssueReceipts.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="DebitNoteNumber">[BillingNo1]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupExit.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_300" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupExit.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0006" sap:VirtualizedContainerService.HintSize="450.4,1759.2" sap2010:WorkflowViewState.IdRef="Sequence_235">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_315" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_316" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotatioReg.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_397" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupQuotatioReg.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCapture.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_318" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupMemberCapture.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1">[IdentityNo2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupPolicyProcessing.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_319" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\GroupPolicyProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_PolicyIssueForm.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_320" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_PolicyIssueForm.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID">[QID]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo1" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Gr_BillingEnquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_340" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Gr_BillingEnquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo1">[BillingNo1]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo2" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ApplicationScreenShotPath">[ApplicationScreenShotPath]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_IssueReceipts.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_341" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_IssueReceipts.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="DebitNoteNumber">[BillingNo1]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_ClaimRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_338" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_ClaimRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo">[ClNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_ClaimProcessing.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_339" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Group_ClaimProcessing.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[GrPloyNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo">[ClNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="VoucherNumber">[VoucherNumber]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Voucher_Enquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_387" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Voucher_Enquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate" />
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="VoucherNumber">[VoucherNumber]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0007" sap:VirtualizedContainerService.HintSize="450.4,1453.6" sap2010:WorkflowViewState.IdRef="Sequence_261">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_342" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Proposal.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_343" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Proposal.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="JavaSecurityBlock" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_UnderWriting.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_391" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_UnderWriting.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_IssueReceipts.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_345" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_IssueReceipts.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_QualityCheck.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_347" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_QualityCheck.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_PolicyIssuance.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_349" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_PolicyIssuance.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Enquiry_OutDate.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_351" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Enquiry_OutDate.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NonFinacialAlterations1.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_362" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NonFinacialAlterations1.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo1" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo2" />
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Alteration_Enquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_384" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\Alteration_Enquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate" />
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="CML_0008" sap:VirtualizedContainerService.HintSize="450.4,1453.6" sap2010:WorkflowViewState.IdRef="Sequence_284">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_363" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CustomerRegistration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Proposal.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_364" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Proposal.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="JavaSecurityBlock" />
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_UnderWriting.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_392" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_UnderWriting.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_IssueReceipts.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_366" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_IssueReceipts.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_QualityCheck.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_368" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_QualityCheck.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_PolicyIssuance.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_370" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_PolicyIssuance.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Enquiry_OutDate.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_372" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Enquiry_OutDate.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CoolingOffCancellation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_383" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\CoolingOffCancellation.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="RequestDate" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NB_Enquiry_OutDate.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_389" UnSafe="False" WorkflowFileName="TestCases\CAMLIFE\NB_Enquiry_OutDate.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo">[Plno]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="OutDate">[OutStandingDate]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </Switch>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_70">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Nill</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_71">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_72">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ExceptionActivity]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Nill</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_73">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Exe_Status]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Pass</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_74">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ApplicationScreenShotPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["src\Results\Application_Screenshots\"+CurrentRow.item("TestDataID").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteValues - Part2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_221" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - Part2.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="TestData">[TestDataRow]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">[RowCount]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Status">[Exe_Status]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Start_Time">[StartTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="End_Time">[EndTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Message">[ExceptionMessage]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Activity">[ExceptionActivity]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_SS">[ApplicationScreenShotPath]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo">[IdentityNo]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Number_Write">[Plno]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_80">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[TCID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[TestDataRow("TestDataID").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExcelUtilities\WriteValues - TD_Rerun.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_398" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - TD_Rerun.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">
                              <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="RowCount" />
                            </InOutArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">
                              <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="In_ConfigFile" />
                            </InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="TCID">
                              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TCID" />
                            </InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TestDataPath">
                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="TestDataPath" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="562.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,1732" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:Image" Name="ExceptionImage" />
                              <Variable x:TypeArguments="x:String" Name="CustomerRegistered" />
                              <Variable x:TypeArguments="x:String" Name="IdentityNo" />
                              <Variable x:TypeArguments="x:String" Name="failedTestID" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_75">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[failedTestID]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[TestDataRow("TestDataID").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="433.6,135.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_1" ItemToAppend="[failedTestID]" List="[RerunList]" />
                            <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="433.6,86.4" sap2010:WorkflowViewState.IdRef="TakeScreenshot_2" Screenshot="[ExceptionImage]">
                              <ui:TakeScreenshot.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="7bfcd7fa-5459-4a3e-9c04-e34ba24a20ed">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:TakeScreenshot.Target>
                            </ui:TakeScreenshot>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExceptionScreenShotPath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["src\Results\Exception_Screenshots\"+CurrentRow.item("TestDataID").ToString+"_"+now.ToString("HH-mm-ss")+".png"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:SaveImage DisplayName="Save Image" FileName="[&quot;src\Results\Exception_Screenshots\&quot;+CurrentRow.item(&quot;TestDataID&quot;).ToString+&quot;_&quot;+now.ToString(&quot;HH-mm-ss&quot;)+&quot;.png&quot;]" sap:VirtualizedContainerService.HintSize="433.6,134.4" sap2010:WorkflowViewState.IdRef="SaveImage_2" Image="[ExceptionImage]" />
                            <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'msedge.exe Oracle'" sap:VirtualizedContainerService.HintSize="433.6,107.2" sap2010:WorkflowViewState.IdRef="CloseWindow_8" InformativeScreenshot="58a3da1e8400b95b57a9a352c689061f" Selector="&lt;html app='msedge.exe' title='Oracle Fusion Middleware Forms Services - WebUtil' /&gt;" WaitForReady="INTERACTIVE" />
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_26">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Exe_Status]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Fail</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ex.Message]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExceptionActivity]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ex.Source]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteValues - Part3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_196" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - Part3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="TestData">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">[RowCount]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Status">[Exe_Status]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Message">[ExceptionMessage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Activity">[ExceptionActivity]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exception_SS">[ExceptionScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo">[IdenNo_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Number_Write">[Plno]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argument1" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationLogin.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_197" UnSafe="False" WorkflowFileName="ApplicationLogin\ApplicationLogin.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="672.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_76">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[LengthOfRerunList]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[RerunList.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[LengthOfRerunList = 0]" sap:VirtualizedContainerService.HintSize="672.8,525.6" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_287">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_77">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ReRun]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">No</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_288">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_78">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ReRun]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[ReRun = &quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="672.8,533.6" sap2010:WorkflowViewState.IdRef="If_4">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376.8,350.4" sap2010:WorkflowViewState.IdRef="Sequence_289">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'msedge.exe Oracle'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="CloseWindow_9" InformativeScreenshot="58a3da1e8400b95b57a9a352c689061f" Selector="&lt;html app='msedge.exe' title='Oracle Fusion Middleware Forms Services - WebUtil' /&gt;" WaitForReady="INTERACTIVE" />
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReRunTestCases\CAMLIFE_RERUN.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_400" UnSafe="False" WorkflowFileName="ReRunTestCases\CAMLIFE_RERUN.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Excel_TestData1" />
                    <InOutArgument x:TypeArguments="sd:DataColumn" x:Key="Flag" />
                    <InOutArgument x:TypeArguments="sd:DataColumn" x:Key="TestCaseID" />
                    <InOutArgument x:TypeArguments="sd:DataRow" x:Key="Config">[Config]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="RowCount" />
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_ConfigFile" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNumber" />
                    <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow" />
                    <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelData_Main" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="Testcase_Id" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="Plno" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Stat" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="ClNo" />
                    <InArgument x:TypeArguments="x:String" x:Key="OutStandingDate" />
                    <InArgument x:TypeArguments="ui:Image" x:Key="ExceptionImage" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="GrPloyNo" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="QID" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo1" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo2" />
                    <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage" />
                    <InOutArgument x:TypeArguments="x:Object" x:Key="outputFolder" />
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Results" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo2" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="VoucherNumber" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_290" />
            </If.Else>
          </If>
          <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="672.8,90.4" sap2010:WorkflowViewState.IdRef="Delay_2" />
          <If Condition="[In_ConfigFile(&quot;Send_Mail&quot;).ToString = &quot;YES&quot;]" sap:VirtualizedContainerService.HintSize="672.8,928" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="453.6,744.8" sap2010:WorkflowViewState.IdRef="Sequence_293">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[ReRun = &quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="410.4,655.2" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376.8,236" sap2010:WorkflowViewState.IdRef="Sequence_291">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" IgnoreCRL="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Dear Team, &quot;+&quot;&lt;p&gt;&quot;+&quot;Please find the &quot;+In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; PFA for reference.&quot;+&quot;&lt;p&gt;&quot;+&quot;Thanks &amp; Regards,&quot;+&quot;&lt;br&gt;&quot;+&quot;QEAutomationCOE&quot;]" Cc="[In_ConfigFile(&quot;Mail_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" Email="qeautomationcoe@kgisl.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" Port="25" SecureConnection="None" Server="10.100.1.40" Subject="[In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; - &quot;+now.ToString(&quot;dd-MM-yyyy&quot;)]" To="[In_ConfigFile(&quot;Mail_To&quot;).ToString]">
                        <ui:SendMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"src\Results\Execution_Result\Execution_Result.xlsx"]</InArgument>
                            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"src\Results\Execution_Result\rerun.xlsx"]</InArgument>
                          </scg:List>
                        </ui:SendMail.Files>
                      </ui:SendMail>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376.8,236" sap2010:WorkflowViewState.IdRef="Sequence_292">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" IgnoreCRL="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Dear Team, &quot;+&quot;&lt;p&gt;&quot;+&quot;Please find the &quot;+In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; PFA for reference.&quot;+&quot;&lt;p&gt;&quot;+&quot;Thanks &amp; Regards,&quot;+&quot;&lt;br&gt;&quot;+&quot;QEAutomationCOE&quot;]" Cc="[In_ConfigFile(&quot;Mail_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" Email="qeautomationcoe@kgisl.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_5" IsBodyHtml="True" Port="25" SecureConnection="None" Server="10.100.1.40" Subject="[In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; - &quot;+now.ToString(&quot;dd-MM-yyyy&quot;)]" To="[In_ConfigFile(&quot;Mail_To&quot;).ToString]">
                        <ui:SendMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"src\Results\Execution_Result\Execution_Result.xlsx"]</InArgument>
                          </scg:List>
                        </ui:SendMail.Files>
                      </ui:SendMail>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_294" />
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="TestResultsFolder.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="612.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_227" UnSafe="False" WorkflowFileName="ExcelUtilities\TestResultsFolder.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="x:Object" x:Key="outputFolder">[outputFolder]</InOutArgument>
              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Results">[In_ConfigFile]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>