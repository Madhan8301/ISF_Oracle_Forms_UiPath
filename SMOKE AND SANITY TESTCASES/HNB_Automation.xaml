<Activity mc:Ignorable="sap sap2010" x:Class="TestCase1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Excel_TestData1" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="Flag" Type="InOutArgument(sd:DataColumn)" />
    <x:Property Name="TestCaseID" Type="InOutArgument(sd:DataColumn)" />
    <x:Property Name="Config" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="RowCount" Type="InOutArgument(x:Int32)" />
    <x:Property Name="In_ConfigFile" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="PolicyNumber" Type="InOutArgument(x:String)" />
    <x:Property Name="ExcelRow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="ExcelData_Main" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="Testcase_Id" Type="InOutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>802.4,6923.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TestCase1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Api</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TestCase1" sap:VirtualizedContainerService.HintSize="812.8,6858.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="ConfigDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="TestDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="FilteredTestDT1" />
      <Variable x:TypeArguments="sd:DataTable" Name="TestDT1" />
      <Variable x:TypeArguments="x:String" Name="txtideNo" />
      <Variable x:TypeArguments="x:String" Name="Value" />
      <Variable x:TypeArguments="sd:DataRow" Name="ExcelRowMain" />
      <Variable x:TypeArguments="sd:DataRow" Name="Config" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_ExecutionRes" />
      <Variable x:TypeArguments="x:String" Name="Exe_Status" />
      <Variable x:TypeArguments="x:String" Name="StartTime" />
      <Variable x:TypeArguments="x:String" Name="EndTime" />
      <Variable x:TypeArguments="sd:DataRow" Name="TestDataRow" />
      <Variable x:TypeArguments="x:String" Name="ExceptionActivity" />
      <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
      <Variable x:TypeArguments="x:String" Name="ExceptionScreenShotPath" />
      <Variable x:TypeArguments="x:String" Name="PolicyNoRegistered" />
      <Variable x:TypeArguments="x:String" Name="ApplicationScreenShotPath" />
      <Variable x:TypeArguments="x:String" Name="txtideNo_2" />
      <Variable x:TypeArguments="x:String" Name="ClaimNo_Exp" />
      <Variable x:TypeArguments="x:String" Name="QuotationId_Exp" />
      <Variable x:TypeArguments="x:String" Name="txtideNo_3" />
      <Variable x:TypeArguments="x:String" Name="BillingNo_Exp" />
      <Variable x:TypeArguments="scg:IList(x:String)" Name="RerunList" />
      <Variable x:TypeArguments="x:String" Name="failedTestID" />
      <Variable x:TypeArguments="x:Int32" Name="LengthOfRerunList" />
      <Variable x:TypeArguments="x:String" Name="ReRun" />
      <Variable x:TypeArguments="x:String" Name="TestDataPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Config_Files\Config_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="750.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_221" UnSafe="False" WorkflowFileName="Config_Files\Config_HNB.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Out_ConfigFile">[In_ConfigFile]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CreateList x:TypeArguments="x:String" DisplayName="Create List" sap:VirtualizedContainerService.HintSize="750.4,135.2" sap2010:WorkflowViewState.IdRef="CreateList`1_1" NewList="[RerunList]" />
    <Assign sap:VirtualizedContainerService.HintSize="750.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_37">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TestDataPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[In_ConfigFile("TestData_Path").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="750.4,281.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[TestDataPath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,172" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[TestDT1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[In_ConfigFile(&quot;TDSheetName&quot;).ToString]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:FilterDataTable DataTable="[TestDT1]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="750.4,162.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[FilteredTestDT1]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["TestCaseID"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["LIFE_CON"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["ExecutionFlag"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["Yes"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ClearFolder.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="750.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_229" UnSafe="False" WorkflowFileName="ExcelUtilities\ClearFolder.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExcelDataClear.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="750.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_230" UnSafe="False" WorkflowFileName="ExcelUtilities\ExcelDataClear.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="750.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
        <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
        <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[FilteredTestDT1.RowCount= 0]" sap:VirtualizedContainerService.HintSize="750.4,5311.2" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="377.6,232" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;Please select execution Flag&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="716.8,4896" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="673.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[RowCount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">4</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[FilteredTestDT1]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="673.6,2647.2" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="640,2459.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="597,82" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[RowCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[RowCount+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="597,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CurrentRow.item("TestDataID").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="597,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[TestDataRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[CurrentRow]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="597,82" sap2010:WorkflowViewState.IdRef="Assign_31">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="596.8,1883.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="559.2,1652" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="PolicyDate" />
                          <Variable x:TypeArguments="x:String" Name="CustomerRegistered" />
                          <Variable x:TypeArguments="ui:Image" Name="ExceptionImage" />
                          <Variable x:TypeArguments="ui:Image" Name="ScreenShotImage" />
                          <Variable x:TypeArguments="x:String" Name="TCID" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteValues - IdentityCode HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_224" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - IdentityCode HNB.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="TestData">[TestDataRow]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">[RowCount]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Status">[Exe_Status]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Start_Time">[StartTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="End_Time">[EndTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Message">[ExceptionMessage]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Activity">[ExceptionActivity]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_SS">[ExceptionScreenShotPath]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo">[txtideNo]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Number_Write">[PolicyNoRegistered]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[TestDataRow(&quot;TestDataID&quot;).ToString]" sap:VirtualizedContainerService.HintSize="496.8,349.6" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                          <Sequence x:Key="HNB_001" sap:VirtualizedContainerService.HintSize="450.4,989.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="ProposalAmount" />
                              <Variable x:TypeArguments="sd:DataTable" Name="Testdata" />
                              <Variable x:TypeArguments="x:String" Name="PolicyRegistered" />
                              <Variable x:TypeArguments="ui:Image" Name="Exception_Image" />
                              <Variable x:TypeArguments="x:String" Name="Excep_Message" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Proposal_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_77" UnSafe="False" WorkflowFileName="TestCases\HNB\Proposal_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="CustomerForPolicy">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[Exception_Image]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="UnderWriting_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_207" UnSafe="False" WorkflowFileName="TestCases\HNB\UnderWriting_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="PolicyNoUnderwriting">[PolicyNoRegistered]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[Exception_Image]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IssueReceipts_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_208" UnSafe="False" WorkflowFileName="TestCases\HNB\IssueReceipts_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_Receipt">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Receipt_amount" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[Exception_Image]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="QualityCheck_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_209" UnSafe="False" WorkflowFileName="TestCases\HNB\QualityCheck_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_QC">[PolicyNoRegistered]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[Exception_Image]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PolicyIssue_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_210" UnSafe="False" WorkflowFileName="TestCases\HNB\PolicyIssue_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo_PolicyIssue">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[Exception_Image]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_002" sap:VirtualizedContainerService.HintSize="450.4,1448" sap2010:WorkflowViewState.IdRef="Sequence_27">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="variable1" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_231" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_232" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Proposal_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_92" UnSafe="False" WorkflowFileName="TestCases\HNB\Proposal_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="CustomerForPolicy">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="UnderWriting_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_211" UnSafe="False" WorkflowFileName="TestCases\HNB\UnderWriting_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="PolicyNoUnderwriting">[PolicyNoRegistered]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IssueReceipts_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_212" UnSafe="False" WorkflowFileName="TestCases\HNB\IssueReceipts_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_Receipt">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Receipt_amount" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="QualityCheck_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_213" UnSafe="False" WorkflowFileName="TestCases\HNB\QualityCheck_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_QC">[PolicyNoRegistered]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PolicyIssue_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_214" UnSafe="False" WorkflowFileName="TestCases\HNB\PolicyIssue_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo_PolicyIssue">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Claim_Registration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" UnSafe="False" WorkflowFileName="TestCases\HNB\Claim_Registration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo_Claim">[PolicyNoRegistered]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="CustomerIDNo_Claim">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo">[ClaimNo_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ClaimProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" UnSafe="False" WorkflowFileName="TestCases\HNB\ClaimProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo_Proceessing">[ClaimNo_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_ID">[TestCase_ID]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_003" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_28">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_233" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_234" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Quotation_ID">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCaptureHNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupMemberCaptureHNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationIdMemberCapture">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_1">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_2">[txtideNo_2]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_103" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Processing">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_160" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_02.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_156" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_02.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_157" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Login2">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_161" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_03.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_158" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_03.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_159" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationId_Login3">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_196" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_195" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Billing Enquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_197" UnSafe="False" WorkflowFileName="TestCases\HNB\Billing Enquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo">[BillingNo_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroUPPolicyNo">[PolicyNoRegistered]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IssueReceipts_BillingEnquiry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_198" UnSafe="False" WorkflowFileName="TestCases\HNB\IssueReceipts_BillingEnquiry.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_Receipt">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Receipt_amount" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="BillingNo">[BillingNo_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Claim_Registration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_105" UnSafe="False" WorkflowFileName="TestCases\HNB\Claim_Registration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo_Claim">[PolicyNoRegistered]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="CustomerIDNo_Claim">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo">[ClaimNo_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ClaimProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_106" UnSafe="False" WorkflowFileName="TestCases\HNB\ClaimProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ClaimNo_Proceessing">[ClaimNo_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_ID">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_004" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_235" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Proposal_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_108" UnSafe="False" WorkflowFileName="TestCases\HNB\Proposal_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="CustomerForPolicy">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="UnderWriting_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_215" UnSafe="False" WorkflowFileName="TestCases\HNB\UnderWriting_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="PolicyNoUnderwriting">[PolicyNoRegistered]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IssueReceipts_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_216" UnSafe="False" WorkflowFileName="TestCases\HNB\IssueReceipts_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_Receipt">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Receipt_amount" />
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="QualityCheck_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_217" UnSafe="False" WorkflowFileName="TestCases\HNB\QualityCheck_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_QC">[PolicyNoRegistered]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PolicyIssue_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_218" UnSafe="False" WorkflowFileName="TestCases\HNB\PolicyIssue_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNo_PolicyIssue">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Alteration_Registration.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_113" UnSafe="False" WorkflowFileName="TestCases\HNB\Alteration_Registration.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Customer_Alteration">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Alteration">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Alteration_Underwriting.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_114" UnSafe="False" WorkflowFileName="TestCases\HNB\Alteration_Underwriting.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Alteration_Underwriting_Policy">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="IssueReceipts_Premium_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_228" UnSafe="False" WorkflowFileName="TestCases\HNB\IssueReceipts_Premium_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="Excel_Row_Premium_Receipt">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Premium_Amout" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_No_Premium_Receipt">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AlterationIssue.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_116" UnSafe="False" WorkflowFileName="TestCases\HNB\AlterationIssue.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="PolicyAlterationIssue">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_005" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_30">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_236" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_237" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_238" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_3]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_120" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Quotation_ID">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCaptureHNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_121" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupMemberCaptureHNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationIdMemberCapture">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_1">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_2">[txtideNo_2]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Processing">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_162" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_02.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_163" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_02.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_164" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Login2">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_165" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_03.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_166" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_03.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_167" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationId_Login3">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_199" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_200" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_Entrant_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_124" UnSafe="False" WorkflowFileName="TestCases\HNB\Group_Entrant_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicy_NO">[PolicyNoRegistered]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Identity_No3">[txtideNo_3]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_006" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_31">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_239" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_240" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_127" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Quotation_ID">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCaptureHNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_128" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupMemberCaptureHNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationIdMemberCapture">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_1">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_2">[txtideNo_2]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_129" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Processing">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_168" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_02.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_169" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_02.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_170" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Login2">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_171" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_03.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_172" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_03.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_173" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationId_Login3">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_201" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_202" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_Exit_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_131" UnSafe="False" WorkflowFileName="TestCases\HNB\Group_Exit_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicy_No">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_007" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_32">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_241" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_242" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_134" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Quotation_ID">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCaptureHNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_135" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupMemberCaptureHNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationIdMemberCapture">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_1">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_2">[txtideNo_2]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_136" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Processing">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_174" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_02.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_175" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_02.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_176" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Login2">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_177" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_03.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_178" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_03.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_179" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationId_Login3">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_205" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_206" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_Underwriting_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_220" UnSafe="False" WorkflowFileName="TestCases\HNB\Group_Underwriting_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Policy_No">[PolicyNoRegistered]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_ID">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_008" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_243" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_244" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_141" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Quotation_ID">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCaptureHNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_142" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupMemberCaptureHNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationIdMemberCapture">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_1">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_2">[txtideNo_2]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_143" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Processing">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_180" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_02.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_181" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_02.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_182" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Login2">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_183" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_03.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_184" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_03.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_185" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationId_Login3">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_203" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_204" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Group_Alteration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_219" UnSafe="False" WorkflowFileName="TestCases\HNB\Group_Alteration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="GroupPolicy_No">[PolicyNoRegistered]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <Sequence x:Key="HNB_009" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_34">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_245" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_246" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo_2]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                                <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_148" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationRegistration_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Quotation_ID">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[TestCase_ID]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupMemberCaptureHNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_149" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupMemberCaptureHNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationIdMemberCapture">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_1">[txtideNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Cust_2">[txtideNo_2]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[TestCase_ID]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GroupQuotationProcessing_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_154" UnSafe="False" WorkflowFileName="TestCases\HNB\GroupQuotationProcessing_HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Processing">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Testcase_Id">[Testcase_Id]</InArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_186" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_02.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_187" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_02.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login2.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_188" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationID_Login2">[QuotationId_Exp]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ApplicationClose.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_189" UnSafe="False" WorkflowFileName="TestCases\HNB\ApplicationClose.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login_03.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_190" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login_03.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RecommandationApproval_Login3.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_191" UnSafe="False" WorkflowFileName="TestCases\HNB\RecommandationApproval_Login3.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="QuotationId_Login3">[QuotationId_Exp]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="GroupPolicyNo">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ExceptionImage]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="HNB_CUST" DisplayName="CustomerRegistration_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_247" UnSafe="False" WorkflowFileName="TestCases\HNB\CustomerRegistration_HNB.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow">[TestDataRow]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:String" x:Key="txtIdenNo">[txtideNo]</InOutArgument>
                              <InOutArgument x:TypeArguments="sd:DataRow" x:Key="In_CurrentTestDataRow">[TestDataRow]</InOutArgument>
                              <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestRow">[TestDataRow]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:String" x:Key="Test_End_Time">[EndTime]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:String" x:Key="ExceptionScreenShotPath">[ExceptionScreenShotPath]</InOutArgument>
                              <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentTestCaseRow">[TestDataRow]</InArgument>
                              <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRowMain">[ExcelRowMain]</InOutArgument>
                              <InOutArgument x:TypeArguments="ui:Image" x:Key="ScreenShotImage">[ScreenShotImage]</InOutArgument>
                              <InOutArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_AppSrcPath">src\Results\Application_Screenshots</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Switch>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Nill</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ExceptionActivity]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Nill</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Exe_Status]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Pass</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[ApplicationScreenShotPath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["src\Results\Application_Screenshots\"+CurrentRow.item("TestDataID").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteValues - Part2 HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_225" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - Part2 HNB.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="TestData">[TestDataRow]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">[RowCount]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Status">[Exe_Status]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Start_Time">[StartTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="End_Time">[EndTime]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Message">[ExceptionMessage]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Activity">[ExceptionActivity]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Exception_SS">[ExceptionScreenShotPath]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo">[txtideNo]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Number_Write">[PolicyNoRegistered]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argument1" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="496.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_36">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[TCID]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[TestDataRow("TestDataID").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExcelUtilities\WriteValues - TD_Rerun.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="496.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_248" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - TD_Rerun.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">
                              <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="RowCount" />
                            </InOutArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">
                              <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="In_ConfigFile" />
                            </InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="TCID">
                              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="TCID" />
                            </InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TestDataPath">
                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="TestDataPath" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="562.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,1731.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:Image" Name="ExceptionImage" />
                              <Variable x:TypeArguments="x:String" Name="CustomerRegistered" />
                              <Variable x:TypeArguments="x:String" Name="IdentityNo" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take Screenshot" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="TakeScreenshot_2" Screenshot="[ExceptionImage]">
                              <ui:TakeScreenshot.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="7bfcd7fa-5459-4a3e-9c04-e34ba24a20ed">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:TakeScreenshot.Target>
                            </ui:TakeScreenshot>
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_25">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExceptionScreenShotPath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["src\Results\Exception_Screenshots\"+CurrentRow.item("TestDataID").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:SaveImage DisplayName="Save Image" FileName="[&quot;src\Results\Exception_Screenshots\&quot;+CurrentRow.item(&quot;TestDataID&quot;).ToString+&quot;_&quot;+now.ToString(&quot;HH-mm-ss&quot;)+&quot;.png&quot;]" sap:VirtualizedContainerService.HintSize="434,133" sap2010:WorkflowViewState.IdRef="SaveImage_2" Image="[ExceptionImage]" />
                            <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'msedge.exe Oracle'" sap:VirtualizedContainerService.HintSize="434,107" sap2010:WorkflowViewState.IdRef="CloseWindow_8" InformativeScreenshot="58a3da1e8400b95b57a9a352c689061f" Selector="&lt;html app='msedge.exe' title='Oracle Fusion Middleware Forms Services - WebUtil' /&gt;" WaitForReady="INTERACTIVE" />
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_26">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[Exe_Status]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Fail</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Now.ToString("HH:mm:ss")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ex.Message]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[ExceptionActivity]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[ex.Source]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_32">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[failedTestID]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[TestDataRow("TestDataID").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="433.6,135.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_1" ItemToAppend="[failedTestID]" List="[RerunList]" />
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="WriteValues - Part3 HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_226" UnSafe="False" WorkflowFileName="ExcelUtilities\WriteValues - Part3 HNB.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="TestData">[TestDataRow]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:Int32" x:Key="Range">[RowCount]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exe_Status">[Exe_Status]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Start_Time">[StartTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="End_Time">[EndTime]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Message">[ExceptionMessage]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exception_Activity">[ExceptionActivity]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Exception_SS">[ExceptionScreenShotPath]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="IdentityNo">[IdentityNo]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="Policy_Number_Write">[PolicyNoRegistered]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="argument1" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="HNB_Login.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_84" UnSafe="False" WorkflowFileName="ApplicationLogin\HNB_Login.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Login">[In_ConfigFile]</InOutArgument>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="LoginApp">[Config]</InOutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Test_Start_Time">[StartTime]</InArgument>
                                <InArgument x:TypeArguments="sd:DataRow" x:Key="CurrentRow">[TestDataRow]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <Assign sap:VirtualizedContainerService.HintSize="673,82" sap2010:WorkflowViewState.IdRef="Assign_33">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[LengthOfRerunList]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[RerunList.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[LengthOfRerunList = 0]" sap:VirtualizedContainerService.HintSize="673,52" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_39">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_34">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ReRun]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">No</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_40">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_35">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ReRun]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Yes</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[ReRun = &quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="673,532" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376.8,350.4" sap2010:WorkflowViewState.IdRef="Sequence_41">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'msedge.exe Oracle'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="CloseWindow_9" InformativeScreenshot="58a3da1e8400b95b57a9a352c689061f" Selector="&lt;html app='msedge.exe' title='Oracle Fusion Middleware Forms Services - WebUtil' /&gt;" WaitForReady="INTERACTIVE" />
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReRunTestCases\HNB_Automation_RERUN.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_249" UnSafe="False" WorkflowFileName="ReRunTestCases\HNB_Automation_RERUN.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Excel_TestData1" />
                    <InOutArgument x:TypeArguments="sd:DataColumn" x:Key="Flag" />
                    <InOutArgument x:TypeArguments="sd:DataColumn" x:Key="TestCaseID" />
                    <InOutArgument x:TypeArguments="sd:DataRow" x:Key="Config">[Config]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="RowCount" />
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_ConfigFile" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="PolicyNumber" />
                    <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelRow" />
                    <InOutArgument x:TypeArguments="sd:DataRow" x:Key="ExcelData_Main" />
                    <InOutArgument x:TypeArguments="x:String" x:Key="Testcase_Id" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42" />
            </If.Else>
          </If>
          <Delay Duration="00:00:01" sap:VirtualizedContainerService.HintSize="612.8,90.4" sap2010:WorkflowViewState.IdRef="Delay_3" />
          <If Condition="[In_ConfigFile(&quot;Send_Mail&quot;).ToString = &quot;YES&quot;]" sap:VirtualizedContainerService.HintSize="612.8,928" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="453.6,744.8" sap2010:WorkflowViewState.IdRef="Sequence_45">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[ReRun = &quot;Yes&quot;]" sap:VirtualizedContainerService.HintSize="410.4,655.2" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376.8,236" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" IgnoreCRL="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Dear Team, &quot;+&quot;&lt;p&gt;&quot;+&quot;Please find the &quot;+In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; PFA for reference.&quot;+&quot;&lt;p&gt;&quot;+&quot;Thanks &amp; Regards,&quot;+&quot;&lt;br&gt;&quot;+&quot;QEAutomationCOE&quot;]" Cc="[In_ConfigFile(&quot;Mail_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" Email="qeautomationcoe@kgisl.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" Port="25" SecureConnection="None" Server="10.100.1.40" Subject="[In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; - &quot;+now.ToString(&quot;dd-MM-yyyy&quot;)]" To="[In_ConfigFile(&quot;Mail_To&quot;).ToString]">
                        <ui:SendMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"src\Results\Execution_Result\Execution_Result.xlsx"]</InArgument>
                            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"src\Results\Execution_Result\rerun.xlsx"]</InArgument>
                          </scg:List>
                        </ui:SendMail.Files>
                      </ui:SendMail>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="376.8,236" sap2010:WorkflowViewState.IdRef="Sequence_44">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" From="{x:Null}" IgnoreCRL="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Dear Team, &quot;+&quot;&lt;p&gt;&quot;+&quot;Please find the &quot;+In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; PFA for reference.&quot;+&quot;&lt;p&gt;&quot;+&quot;Thanks &amp; Regards,&quot;+&quot;&lt;br&gt;&quot;+&quot;QEAutomationCOE&quot;]" Cc="[In_ConfigFile(&quot;Mail_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" Email="qeautomationcoe@kgisl.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_5" IsBodyHtml="True" Port="25" SecureConnection="None" Server="10.100.1.40" Subject="[In_ConfigFile(&quot;Email_Content&quot;).ToString+&quot; - &quot;+now.ToString(&quot;dd-MM-yyyy&quot;)]" To="[In_ConfigFile(&quot;Mail_To&quot;).ToString]">
                        <ui:SendMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"+"src\Results\Execution_Result\Execution_Result.xlsx"]</InArgument>
                          </scg:List>
                        </ui:SendMail.Files>
                      </ui:SendMail>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46" />
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="TestResultsFolder_HNB.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="612.8,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_227" UnSafe="False" WorkflowFileName="ExcelUtilities\TestResultsFolder_HNB.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config_Results">[In_ConfigFile]</InOutArgument>
              <InOutArgument x:TypeArguments="x:Object" x:Key="outputFolder" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>